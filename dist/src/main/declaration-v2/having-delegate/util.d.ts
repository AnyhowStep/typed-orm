import { AnySelectBuilder } from "../select-builder";
import { HavingDelegate } from "./having-delegate";
import { Expr } from "../expr";
import { Join } from "../join";
import { Column } from "../column";
import { AliasedExpr } from "../aliased-expr";
import { AliasedTable } from "../aliased-table";
export declare namespace HavingDelegateUtil {
    function execute<SelectBuilderT extends AnySelectBuilder, HavingDelegateT extends HavingDelegate<SelectBuilderT>>(selectBuilder: SelectBuilderT, delegate: HavingDelegateT): Expr<{ readonly [tableAlias in Extract<Extract<Exclude<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>, string> | Extract<Extract<Exclude<keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {}), keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})>, string>, string> | Extract<Extract<Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>, string>]+?: { readonly [columnName in Extract<keyof ({ readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {}), keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})>, string>]: (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [columnName in Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias], string>]: columnName extends keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] ? Column<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["tableAlias"], (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["name"], ReturnType<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["assertDelegate"]> & ReturnType<(SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias][columnName]["assertDelegate"]>> : (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]; } & (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never : never; })[tableAlias], string>]+?: (({ readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {}), keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})>, string>]: (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [columnName in Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias], string>]: columnName extends keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] ? Column<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["tableAlias"], (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["name"], ReturnType<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["assertDelegate"]> & ReturnType<(SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias][columnName]["assertDelegate"]>> : (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]; } & (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never : never; })[tableAlias][columnName] extends Column<string, string, any> ? ({ readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Exclude<keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {}), keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})>, string>]: (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never; } & { readonly [tableAlias in Extract<Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {}), keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})>, string>]: (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [columnName in Extract<keyof (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias], string>]: columnName extends keyof (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] ? Column<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["tableAlias"], (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["name"], ReturnType<(SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]["assertDelegate"]> & ReturnType<(SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias][columnName]["assertDelegate"]>> : (SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? { readonly [tableAlias in SelectBuilderT["data"]["joins"][Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["table"]["alias"]]: true extends { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["nullable"] ? { readonly [columnName in Extract<keyof { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"], string>]: Column<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["tableAlias"], { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["name"], ReturnType<{ [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"][columnName]["assertDelegate"]> | null>; } : { [index in Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]: SelectBuilderT["data"]["joins"][index] extends Join<AliasedTable<string, string, {
        readonly [columnName: string]: Column<string, string, any>;
    }>, {
        readonly [columnName: string]: Column<string, string, any>;
    }, boolean> ? SelectBuilderT["data"]["joins"][index]["table"]["alias"] extends tableAlias ? SelectBuilderT["data"]["joins"][index] : never : never; }[Exclude<keyof SelectBuilderT["data"]["joins"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values">]["columns"]; } : {})[tableAlias][columnName]; } & (SelectBuilderT["data"]["selects"] extends (Column<string, string, any> | {
        readonly [columnName: string]: Column<string, string, any>;
    } | AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any>)[] & {
        "0": Column<string, string, any> | {
            readonly [columnName: string]: Column<string, string, any>;
        } | AliasedExpr<{
            readonly [x: string]: {
                readonly [x: string]: Column<string, string, any> | undefined;
            } | undefined;
        }, string, string, any>;
    } ? ("0" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["0"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["0"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["0"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["0"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["0"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["0"][keyof SelectBuilderT["data"]["selects"]["0"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["0"]; } : {} : {}) & ("1" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["1"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["1"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["1"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["1"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["1"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["1"][keyof SelectBuilderT["data"]["selects"]["1"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["1"]; } : {} : {}) & ("2" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["2"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["2"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["2"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["2"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["2"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["2"][keyof SelectBuilderT["data"]["selects"]["2"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["2"]; } : {} : {}) & ("3" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["3"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["3"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["3"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["3"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["3"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["3"][keyof SelectBuilderT["data"]["selects"]["3"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["3"]; } : {} : {}) & ("4" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["4"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["4"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["4"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["4"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["4"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["4"][keyof SelectBuilderT["data"]["selects"]["4"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["4"]; } : {} : {}) & ("5" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["5"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["5"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["5"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["5"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["5"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["5"][keyof SelectBuilderT["data"]["selects"]["5"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["5"]; } : {} : {}) & ("6" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["6"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["6"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["6"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["6"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["6"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["6"][keyof SelectBuilderT["data"]["selects"]["6"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["6"]; } : {} : {}) & ("7" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["7"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["7"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["7"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["7"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["7"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["7"][keyof SelectBuilderT["data"]["selects"]["7"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["7"]; } : {} : {}) & ("8" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["8"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["8"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["8"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["8"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["8"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["8"][keyof SelectBuilderT["data"]["selects"]["8"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["8"]; } : {} : {}) & ("9" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["9"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["9"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["9"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["9"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["9"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["9"][keyof SelectBuilderT["data"]["selects"]["9"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["9"]; } : {} : {}) & ("10" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["10"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["10"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["10"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["10"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["10"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["10"][keyof SelectBuilderT["data"]["selects"]["10"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["10"]; } : {} : {}) & ("11" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["11"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["11"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["11"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["11"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["11"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["11"][keyof SelectBuilderT["data"]["selects"]["11"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["11"]; } : {} : {}) & ("12" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["12"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["12"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["12"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["12"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["12"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["12"][keyof SelectBuilderT["data"]["selects"]["12"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["12"]; } : {} : {}) & ("13" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["13"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["13"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["13"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["13"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["13"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["13"][keyof SelectBuilderT["data"]["selects"]["13"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["13"]; } : {} : {}) & ("14" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["14"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["14"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["14"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["14"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["14"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["14"][keyof SelectBuilderT["data"]["selects"]["14"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["14"]; } : {} : {}) & ("15" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["15"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["15"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["15"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["15"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["15"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["15"][keyof SelectBuilderT["data"]["selects"]["15"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["15"]; } : {} : {}) & ("16" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["16"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["16"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["16"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["16"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["16"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["16"][keyof SelectBuilderT["data"]["selects"]["16"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["16"]; } : {} : {}) & ("17" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["17"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["17"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["17"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["17"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["17"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["17"][keyof SelectBuilderT["data"]["selects"]["17"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["17"]; } : {} : {}) & ("18" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["18"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["18"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["18"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["18"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["18"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["18"][keyof SelectBuilderT["data"]["selects"]["18"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["18"]; } : {} : {}) & ("19" extends Exclude<keyof SelectBuilderT["data"]["selects"], number | "reverse" | "map" | "filter" | "push" | "length" | "toString" | "toLocaleString" | "pop" | "concat" | "join" | "shift" | "slice" | "sort" | "splice" | "unshift" | "indexOf" | "lastIndexOf" | "every" | "some" | "forEach" | "reduce" | "reduceRight" | "find" | "findIndex" | "fill" | "copyWithin" | "entries" | "keys" | "values"> ? SelectBuilderT["data"]["selects"]["19"] extends AliasedExpr<{
        readonly [x: string]: {
            readonly [x: string]: Column<string, string, any> | undefined;
        } | undefined;
    }, string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnAlias in SelectBuilderT["data"]["selects"]["19"]["alias"]]: Column<tableAlias, columnAlias, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends Column<string, string, any> ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"]["tableAlias"]]: { readonly [columnName in SelectBuilderT["data"]["selects"]["19"]["name"]]: Column<tableAlias, columnName, ReturnType<SelectBuilderT["data"]["selects"]["19"]["assertDelegate"]>>; }; } : SelectBuilderT["data"]["selects"]["19"] extends {
        readonly [columnName: string]: Column<string, string, any>;
    } ? { readonly [tableAlias in SelectBuilderT["data"]["selects"]["19"][keyof SelectBuilderT["data"]["selects"]["19"]]["tableAlias"]]: SelectBuilderT["data"]["selects"]["19"]; } : {} : {}) : {})[tableAlias] : never : never; })[tableAlias][columnName] : never) | undefined; } | undefined; }, boolean>;
}
