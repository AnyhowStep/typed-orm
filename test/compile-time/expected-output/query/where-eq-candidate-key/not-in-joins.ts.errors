[
  {
    "messageText": {
      "messageText": "Argument of type 'import(\"/home/anyhowstep/node-projects/typed-orm/dist/src/main/v3/table/table\").Table<{ readonly usedRef: {}; readonly alias: \"other\"; readonly columns: { readonly a: import(\"/home/anyhowstep/node-projects/typed-orm/dist/src/main/v3/column/column\").Column<{ tableAlias: \"other\"; name: \"a\"; assertDelegate: import(\"/ho...' is not assignable to parameter of type 'import(\"/home/anyhowstep/node-projects/typed-orm/dist/src/main/v3/table/table\").Table<{ readonly usedRef: {}; readonly alias: \"other\"; readonly columns: { readonly a: import(\"/home/anyhowstep/node-projects/typed-orm/dist/src/main/v3/column/column\").Column<{ tableAlias: \"other\"; name: \"a\"; assertDelegate: import(\"/ho...'.",
      "category": 1,
      "code": 2345,
      "next": {
        "messageText": "Type 'Table<{ readonly usedRef: {}; readonly alias: \"other\"; readonly columns: { readonly a: Column<{ tableAlias: \"other\"; name: \"a\"; assertDelegate: AssertDelegate<number> & { __accepts: number; __canAccept: number; }; }>; readonly b: Column<...>; readonly c: Column<...>; }; ... 10 more ...; readonly deleteAllowed: true;...' is not assignable to type 'Table<{ readonly usedRef: {}; readonly alias: \"table\"; readonly columns: { readonly y: Column<{ tableAlias: \"table\"; name: \"y\"; assertDelegate: AssertDelegate<string | null> & { __accepts: string | null; __canAccept: string | null; }; }>; readonly x: Column<...>; readonly z: Column<...>; }; ... 10 more ...; readonly...'.",
        "category": 1,
        "code": 2322,
        "next": {
          "messageText": "Types of property 'alias' are incompatible.",
          "category": 1,
          "code": 2326,
          "next": {
            "messageText": "Type '\"other\"' is not assignable to type '\"table\"'.",
            "category": 1,
            "code": 2322
          }
        }
      }
    },
    "code": 2345,
    "category": 1,
    "length": 5,
    "start": 514
  }
]