import * as sd from "schema-decorator";
import * as o from "../../../../dist/src/main";

const entity = o.table(
    "entity",
    {
        entityId : o.bigint(),
    }
).setAutoIncrement(c => c.entityId);

const entityBanned = o.table(
    "entityBanned",
    {
        entityId : o.bigint(),
        updatedAt : o.dateTime(),
        banned : o.boolean(),
    }
).addCandidateKey(
    c => [c.entityId, c.updatedAt]
).addHasExplicitDefaultValue(
    c => [c.updatedAt]
);
const test = o.log(entityBanned)
    .setEntityIdentifier(c => [c.entityId])
    .setLatestOrder(c => c.updatedAt.desc())
    .setTracked(c => [c.banned])
    .setDoNotCopy(() => []);
declare const wtf : {
    readonly [columnName in {
        [columnName in Extract<keyof { banned : true }, string>] : (
            undefined extends { banned : true }[columnName] ?
            never :
            columnName
        )
    }[Extract<keyof { banned : true }, string>]] : (
        { banned : true }[columnName]
    )
};
const entityBannedLog = o.log(entityBanned)
    .setEntityIdentifier(c => [c.entityId])
    .setLatestOrder(c => c.updatedAt.desc())
    .setTracked(c => [c.banned])
    .setDoNotCopy(() => [])
    .setStaticDefaultValue<{banned:true}>({
        banned : true,
    })
    .staticDefaultValue;
    .setDynamicDefaultValueDelegate(() => {
        return Promise.resolve({});
    })