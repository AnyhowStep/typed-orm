SELECT
	`merchant`.`appId` AS `merchant--appId`,
	`merchant`.`businessId` AS `merchant--businessId`,
	`merchant`.`createdAt` AS `merchant--createdAt`,
	`merchant`.`merchantId` AS `merchant--merchantId`,
	`merchant`.`payOutMethodId` AS `merchant--payOutMethodId`,
	`merchant`.`platformId` AS `merchant--platformId`,
	`appPlatform`.`appId` AS `appPlatform--appId`,
	`appPlatform`.`createdAt` AS `appPlatform--createdAt`,
	`appPlatform`.`platformId` AS `appPlatform--platformId`,
	`business`.`appId` AS `business--appId`,
	`business`.`businessId` AS `business--businessId`,
	`business`.`businessTypeId` AS `business--businessTypeId`,
	`business`.`countryId` AS `business--countryId`,
	`business`.`createdAt` AS `business--createdAt`,
	`business`.`createdByExternalUserId` AS `business--createdByExternalUserId`,
	`business`.`externalUserId` AS `business--externalUserId`,
	`user`.`appId` AS `user--appId`,
	`user`.`banned` AS `user--banned`,
	`user`.`createdAt` AS `user--createdAt`,
	`user`.`displayName` AS `user--displayName`,
	`user`.`externalUserId` AS `user--externalUserId`,
	`businessPayOutMethod`.`appId` AS `businessPayOutMethod--appId`,
	`businessPayOutMethod`.`businessId` AS `businessPayOutMethod--businessId`,
	`businessPayOutMethod`.`createdAt` AS `businessPayOutMethod--createdAt`,
	`businessPayOutMethod`.`createdByExternalUserId` AS `businessPayOutMethod--createdByExternalUserId`,
	`businessPayOutMethod`.`externalUserId` AS `businessPayOutMethod--externalUserId`,
	`businessPayOutMethod`.`payOutMethodId` AS `businessPayOutMethod--payOutMethodId`,
	`payOutMethod`.`appId` AS `payOutMethod--appId`,
	`payOutMethod`.`createdAt` AS `payOutMethod--createdAt`,
	`payOutMethod`.`createdByExternalUserId` AS `payOutMethod--createdByExternalUserId`,
	`payOutMethod`.`externalUserId` AS `payOutMethod--externalUserId`,
	`payOutMethod`.`payOutMethodId` AS `payOutMethod--payOutMethodId`,
	`payOutMethod`.`payOutMethodTypeId` AS `payOutMethod--payOutMethodTypeId`,
	((COALESCE((SELECT
		`externalMerchantCreationAttempt`.`attemptedAt` AS `externalMerchantCreationAttempt--attemptedAt`
	FROM
		`externalMerchantCreationAttempt`
	WHERE
		(
			(`externalMerchantCreationAttempt`.`merchantId` = `merchant`.`merchantId`)
		)
	ORDER BY
		`externalMerchantCreationAttempt`.`attemptedAt` DESC
	LIMIT
		1
	OFFSET
		0
	), NULL))) AS `__expr--lastExternalMerchantCreationAttemptAt`
FROM
	`merchant`
INNER JOIN
	`appPlatform`
ON
	`merchant`.`appId` = `appPlatform`.`appId` AND
	`merchant`.`platformId` = `appPlatform`.`platformId`
INNER JOIN
	`business`
ON
	`merchant`.`businessId` = `business`.`businessId`
INNER JOIN
	`user`
ON
	`business`.`appId` = `user`.`appId` AND
	`business`.`externalUserId` = `user`.`externalUserId`
INNER JOIN
	`businessPayOutMethod`
ON
	`merchant`.`businessId` = `businessPayOutMethod`.`businessId` AND
	`merchant`.`payOutMethodId` = `businessPayOutMethod`.`payOutMethodId`
INNER JOIN
	`payOutMethod`
ON
	`businessPayOutMethod`.`payOutMethodId` = `payOutMethod`.`payOutMethodId`
WHERE
	(
		(
		(NOT ((
	                EXISTS (
	                    SELECT
	                        *
	                    FROM
		`externalMerchant`
	WHERE
		(`externalMerchant`.`merchantId` = `merchant`.`merchantId`)
	
	                )
	            ))) AND
		(
	                EXISTS (
	                    SELECT
	                        *
	                    FROM
		`personalInformation`
	WHERE
		(
			(`personalInformation`.`appId` = `user`.`appId`) AND
			(`personalInformation`.`externalUserId` = `user`.`externalUserId`)
		)
	
	                )
	            ) AND
		(
		(COALESCE((SELECT
		`merchantEnabled`.`enabled` AS `merchantEnabled--enabled`
	FROM
		`merchantEnabled`
	WHERE
		(
			(`merchant`.`appId` = `merchantEnabled`.`appId`) AND
			(`merchant`.`merchantId` = `merchantEnabled`.`merchantId`)
		)
	ORDER BY
		`merchantEnabled`.`updatedAt` DESC,
		`merchantEnabled`.`merchantEnabledId` DESC
	LIMIT
		1
	OFFSET
		0
	), true)) AND
		(
		(COALESCE((SELECT
		`businessEnabled`.`enabled` AS `businessEnabled--enabled`
	FROM
		`businessEnabled`
	WHERE
		(
			(`business`.`appId` = `businessEnabled`.`appId`) AND
			(`business`.`businessId` = `businessEnabled`.`businessId`)
		)
	ORDER BY
		`businessEnabled`.`updatedAt` DESC,
		`businessEnabled`.`businessEnabledId` DESC
	LIMIT
		1
	OFFSET
		0
	), true)) AND
		(
	                EXISTS (
	                    SELECT
	                        *
	                    FROM
		`user`
	WHERE
		(
			(`user`.`appId` = `business`.`appId`) AND
			(`user`.`externalUserId` = `business`.`externalUserId`) AND
			(NOT (`user`.`banned`))
		)
	
	                )
	            )
	) AND
		(
		(COALESCE((SELECT
		`payOutMethodEnabled`.`enabled` AS `payOutMethodEnabled--enabled`
	FROM
		`payOutMethodEnabled`
	WHERE
		(
			(`payOutMethod`.`payOutMethodId` = `payOutMethodEnabled`.`payOutMethodId`)
		)
	ORDER BY
		`payOutMethodEnabled`.`updatedAt` DESC,
		`payOutMethodEnabled`.`payOutMethodEnabledId` DESC
	LIMIT
		1
	OFFSET
		0
	), true)) AND
		(
	                EXISTS (
	                    SELECT
	                        *
	                    FROM
		`user`
	WHERE
		(
			(`user`.`appId` = `payOutMethod`.`appId`) AND
			(`user`.`externalUserId` = `payOutMethod`.`externalUserId`) AND
			(NOT (`user`.`banned`))
		)
	
	                )
	            )
	) AND
		(COALESCE((SELECT
		`appPlatformEnabled`.`enabled` AS `appPlatformEnabled--enabled`
	FROM
		`appPlatformEnabled`
	WHERE
		(
			(`appPlatform`.`appId` = `appPlatformEnabled`.`appId`) AND
			(`appPlatform`.`platformId` = `appPlatformEnabled`.`platformId`)
		)
	ORDER BY
		`appPlatformEnabled`.`updatedAt` DESC,
		`appPlatformEnabled`.`logId` DESC
	LIMIT
		1
	OFFSET
		0
	), true))
	)
	) AND
		(NOT ((
	                EXISTS (
	                    SELECT
	                        *
	                    FROM
		`merchantLock`
	WHERE
		(
			(`merchantLock`.`merchantId` = `merchant`.`merchantId`) AND
			((TIMESTAMPDIFF(SECOND, NOW(), `merchantLock`.`timeoutAt`)) > 0)
		)
	
	                )
	            )))
	)
ORDER BY
	(`__expr--lastExternalMerchantCreationAttemptAt` IS NULL) DESC,
	`__expr--lastExternalMerchantCreationAttemptAt` ASC,
	`merchant--createdAt` ASC
LIMIT
	1
OFFSET
	0
